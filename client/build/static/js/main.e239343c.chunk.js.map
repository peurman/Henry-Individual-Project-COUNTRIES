{"version":3,"sources":["styles/Card.module.css","reportWebVitals.js","components/Landing/Landing.jsx","redux/actions/index.js","components/NavBar/NavBar.jsx","components/Card/Card.jsx","components/Home/Home.jsx","components/Country/CountryDetail.jsx","components/Activity/CreateActivity.jsx","components/Previous/Previous.jsx","App.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Landing","exact","to","GET_ALL_COUNTRIES","GET_COUNTRY_DETAIL","GET_COUNTRY_BY_SEARCH","CREATE_ACTIVITY","axios","require","getAllCountries","dispatch","get","response","type","payload","data","SearchBar","React","useState","name","setName","useDispatch","className","onSubmit","e","preventDefault","alert","console","log","getCountryxSearch","placeholder","value","onChange","target","Card","props","id","styles","base","icono","alt","src","flag","ciudad","maxmin","continent","Home","this","countries","map","curr","Component","connect","state","CountryDetail","match","params","countryDet","useSelector","countryDetail","useEffect","getCountryDetail","capital","subregion","population","activities","CreateActivity","difficulty","duration","season","myForm","setMyForm","handleChange","values","post","Previous","path","element","App","initialState","activityDetail","rootReducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e239343c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"base\":\"Card_base__3pRRw\",\"divinterno\":\"Card_divinterno__2iskV\",\"ciudad\":\"Card_ciudad__znDqv\",\"temp\":\"Card_temp__xjngl\",\"maxmin\":\"Card_maxmin__3qutZ\",\"nrotemp\":\"Card_nrotemp__2PyA6\",\"boton\":\"Card_boton__3WVDS\",\"icono\":\"Card_icono__1570w\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div>\r\n      <h1>WELCOME TO COUNTRIES WEB!</h1>\r\n      <NavLink exact to=\"/home\">\r\n        <div>\r\n          <button>GO</button>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","export const GET_ALL_COUNTRIES = \"GET_ALL_COUNTRIES\";\r\nexport const GET_COUNTRY_DETAIL = \"GET_COUNTRY_DETAIL\";\r\nexport const GET_COUNTRY_BY_SEARCH = \"GET_COUNTRY_BY_SEARCH\";\r\nexport const CREATE_ACTIVITY = \"CREATE_ACTIVITY\";\r\n// export const GET_ALL_ACTIVITIES = \"GET_ALL_ACTIVITIES\"; //NO PEDIDA\r\n// export const DELETE_ACTIVITY = \"DELETE_ACTIVITY\"; // NO PEDIDA\r\n\r\nconst axios = require(\"axios\"); // también uso fetch\r\n\r\n// GET_ALL_COUNTRIES con AXIOS\r\nexport const getAllCountries = () => {\r\n  return async function (dispatch) {\r\n    const response = await axios.get(\"http://localhost:3001/countries\");\r\n    dispatch({\r\n      type: GET_ALL_COUNTRIES,\r\n      payload: response.data, // -> trae arreglo de objetos paises\r\n    });\r\n  };\r\n};\r\n// ↑↑↑↑↑↑↑↑ GET_ALL_COUNTRIES con FETCH\r\n// export const getAllCountries = () => {\r\n//   return async function (dispatch) {\r\n//     return fetch(\"http://localhost:3001/countries\")\r\n//       .then((response) => response.json())\r\n//       .then((json) => {\r\n//         dispatch({\r\n//           type: GET_ALL_COUNTRIES,\r\n//           payload: json, // -> trae arreglo de objetos paises\r\n//         });\r\n//       });\r\n//   };\r\n// };\r\n\r\n// GET_COUNTRY_DETAIL x ID con AXIOS\r\nexport const getCountryDetail = (id) => {\r\n  return async (dispatch) => {\r\n    const response = await axios.get(\"http://localhost:3001/countries/\" + id);\r\n    dispatch({\r\n      type: GET_COUNTRY_DETAIL,\r\n      payload: response.data, // -> trae objeto con ese país\r\n    });\r\n  };\r\n};\r\n// ↑↑↑↑↑↑↑↑ GET_COUNTRY_DETAIL con FETCH\r\n// export const getCountryDetail = (id) => {\r\n//   return async (dispatch) => {\r\n//     return fetch(\"http://localhost:3001/countries/\" + id)\r\n//       .then((response) => response.json())\r\n//       .then((json) => {\r\n//         dispatch({\r\n//           type: GET_COUNTRY_DETAIL,\r\n//           payload: json, // -> trae objeto con ese país\r\n//         });\r\n//       });\r\n//   };\r\n// };\r\n\r\n// GET_COUNTRY_BY_SEARCH\r\nexport function getCountryxSearch(name) {\r\n  return async function (dispatch) {\r\n    try {\r\n      const response = await axios.get(\r\n        `http://localhost:3001/countries?name=${name}`\r\n      );\r\n      dispatch({\r\n        type: GET_COUNTRY_BY_SEARCH,\r\n        payload: response.data, // -> trae objeto con ese país\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(\"No se encontraron países\");\r\n    }\r\n  };\r\n}\r\n\r\n// CREATE_ACTIVITY\r\nexport const createActivity = (values) => {\r\n  // return {\r\n  //   type: CREATE_ACTIVITY,\r\n  //   payload: values, // -> trae valores del Form\r\n  // };\r\n  return async function (dispatch) {\r\n    try {\r\n      var response = await axios.post(\r\n        \"http://localhost:3001/api/TourActivity\",\r\n        values\r\n      );\r\n      return dispatch({\r\n        type: \"CREATE_ACTIVITY\",\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {}\r\n  };\r\n};\r\n\r\n// ↓↓↓↓↓↓↓↓NO PEDIDAS↓↓↓↓↓↓↓↓\r\n// export const getAllActivities = () => async (dispatch) => {\r\n//   const response = await axios.get(\"http://localhost:3001/activities\");\r\n//   dispatch({\r\n//     type: GET_ALL_ACTIVITIES,\r\n//     payload: response.data,\r\n//   });\r\n// };\r\n\r\n// export const deleteActivity = (id) => {\r\n//   return {\r\n//     type: DELETE_ACTIVITY,\r\n//     payload: id,\r\n//   };\r\n// };\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n// importa las acciones que voy a usar:\r\nimport { getCountryxSearch } from \"../../redux/actions\";\r\n\r\nexport default function SearchBar() {\r\n  const [name, setName] = React.useState(\"\"); // -> uso estado local\r\n  const dispatch = useDispatch(); // -> para disparar acción\r\n\r\n  function handleInputChange(e) {\r\n    setName(e.target.value); // -> guardo cada cambio en estado local\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!name) {\r\n      alert(\"You have to write somethig to do the search\");\r\n    }\r\n    dispatch(getCountryxSearch(name)); // -> llena \"countryDetail\" del estado global\r\n    setName(\"\"); // -> borro el estado luego al disparar la busqueda\r\n  }\r\n  return (\r\n    <>\r\n      <NavLink to=\"/home\">Home</NavLink>\r\n      <NavLink to=\"/activities\">Create Activity</NavLink>\r\n      <div className=\"search\">\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Write country...\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n          />\r\n          <input type=\"submit\" value=\"Search\" />\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"../../styles/Card.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Modelo de CARD de cada pais, con LINK al respect país\r\nexport default function Card(props) {\r\n  return (\r\n    <div>\r\n      <Link to={`/home/${props.id}`}>\r\n        <div className={styles.base}>\r\n          <img className={styles.icono} alt=\"img\" src={`${props.flag}`} />\r\n          <span className={styles.ciudad}>{props.name}</span>\r\n          <div>\r\n            <p className={styles.maxmin}>Continente: {props.continent}</p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n// acciones a usar:\r\nimport { getAllCountries } from \"../../redux/actions\";\r\n// modelos a usar:\r\nimport Card from \"../Card/Card\";\r\n\r\nexport class Home extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllCountries(); // -> al montar el comp me traigo todos los países\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <h1>PAISES</h1>\r\n          {this.props.countries &&\r\n            this.props.countries.map((curr) => {\r\n              return (\r\n                <Card\r\n                  key={curr.id}\r\n                  id={curr.id}\r\n                  name={curr.name}\r\n                  flag={curr.flag}\r\n                  continent={curr.continent}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = (state) => {\r\n  return { countries: state.countries }; // -> me traigo a las props los países del estado global countries\r\n};\r\n\r\nexport const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCountries: () => dispatch(getAllCountries()), // -> uso el método descripto en las actions\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// acciones que voy a usar:\r\nimport { getCountryDetail } from \"../../redux/actions\";\r\n\r\nconst CountryDetail = (props) => {\r\n  const id = props.match.params.id; // -> me traigo ID x params\r\n  const countryDet = useSelector((state) => state.countryDetail); // info del estado global\r\n  const dispatch = useDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(getCountryDetail(id));\r\n  }, [dispatch, id]); // -> llena \"countryDetail\" del estado global\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img alt=\"img\" src={`${countryDet.flag}`} />\r\n      </div>\r\n      <p>\r\n        <h1>{countryDet.name}</h1>\r\n      </p>\r\n      <p>ID: {countryDet.id}</p>\r\n      <p>Capital: {countryDet.capital}</p>\r\n      <p>Subregion: {countryDet.subregion}</p>\r\n      <p>Continent: {countryDet.continent}</p>\r\n      <p>Area: {countryDet.continent} km2</p>\r\n      <p>Population: {countryDet.population}</p>\r\n      <p>Activities: {countryDet.activities}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountryDetail;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createActivity } from \"../../redux/actions\";\r\n\r\nexport default function CreateActivity() {\r\n  const dispatch = useDispatch();\r\n\r\n  let [myForm, setMyForm] = React.useState({\r\n    // -> uso estado local\r\n    name: \"\",\r\n    difficulty: 0,\r\n    duration: \"\",\r\n    season: 0,\r\n    countries: [],\r\n  });\r\n\r\n  let handleChange = (e) => {\r\n    setMyForm({\r\n      ...myForm,\r\n      [e.target.name]: e.target.value, // -> voy seteando cada valor\r\n    });\r\n  };\r\n  let handleSubmit = (e) => {\r\n    e.preventDefault(); // -> al querer salir  aviso x info cargada\r\n    dispatch(createActivity(myForm)); /// -> con el submit hago el post\r\n  };\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Name: </label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={myForm.name}\r\n          name=\"name\"\r\n        />\r\n        <label>Difficulty: </label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={myForm.difficulty}\r\n          name=\"difficulty\"\r\n        />\r\n        <label>Duración: </label>\r\n        <input\r\n          type=\"number\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={myForm.duration}\r\n          name=\"duration\"\r\n        />\r\n        <label>Season: </label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={myForm.season}\r\n          name=\"season\"\r\n        />\r\n        <label>Countries: </label>\r\n        <input\r\n          type=\"text\"\r\n          onChange={(e) => handleChange(e)}\r\n          value={myForm.countries}\r\n          name=\"countries\"\r\n        />\r\n\r\n        <button type=\"submit\">Create Activity</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n// acciones a usar:\r\nimport { getAllCountries } from \"../../redux/actions\";\r\n// modelos a usar:\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport Home from \"../Home/Home\";\r\nimport CountryDetail from \"../Country/CountryDetail\";\r\nimport CreateActivity from \"../Activity/CreateActivity\";\r\n\r\n// Comp PREVIOUS -> carga TODOS los países + fija NAVBAR + RUTEO\r\nexport class Previous extends Component {\r\n  componentDidMount() {\r\n    this.props.getAllCountries(); // -> al montar el comp me traigo todos los países\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <NavBar />\r\n        <Routes>\r\n          <Route path=\"/countries\" element={<Home />} />\r\n          <Route path=\"/home/:id\" element={<CountryDetail />} />\r\n          <Route path=\"/activities\" element={<CreateActivity />} />\r\n        </Routes>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getAllCountries: () => dispatch(getAllCountries()), // -> uso el método descripto en las actions\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Previous);\r\n","import \"./App.css\";\nimport { Routes, Route } from \"react-router-dom\";\n// modelos que renderizo:\nimport Landing from \"./components/Landing/Landing\";\nimport Previous from \"./components/Previous/Previous\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"/*\" element={<Previous />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","// Importa las action types acá\r\nimport {\r\n  GET_ALL_COUNTRIES,\r\n  GET_COUNTRY_DETAIL,\r\n  GET_COUNTRY_BY_SEARCH,\r\n  CREATE_ACTIVITY,\r\n  // GET_ALL_ACTIVITIES, // NO PEDIDA\r\n  // DELETE_ACTIVITY, // NO PEDIDA\r\n} from \"../actions\";\r\n\r\nconst initialState = {\r\n  countries: [],\r\n  countryDetail: {},\r\n  activityDetail: {},\r\n  activities: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        countries: action.payload, //solo actualizo esta prop\r\n      };\r\n    case GET_COUNTRY_DETAIL:\r\n      return {\r\n        ...state,\r\n        countryDetail: action.payload, //solo actualizo esta prop\r\n      };\r\n    case GET_COUNTRY_BY_SEARCH:\r\n      return {\r\n        ...state,\r\n        countryDetail: action.payload, //solo actualizo esta prop\r\n      };\r\n    case CREATE_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        activityDetail: action.payload, //solo actualizo esta prop\r\n      };\r\n    // ↓↓↓↓↓↓↓↓NO PEDIDAS↓↓↓↓↓↓↓↓\r\n    // case GET_ALL_ACTIVITIES:\r\n    //   return {\r\n    //     // ...state,\r\n    //     // activities: action.payload,\r\n    //   };\r\n    // case DELETE_ACTIVITY:\r\n    //   return {\r\n    //     // ...state,\r\n    //     // activities: state.activities.filter(({ id }) => id !== action.payload),\r\n    //   };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"../reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n\r\nexport default store;\r\n","import \"./index.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}